# -*- coding: utf-8 -*-
"""A2 RPG.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1g8WhW3DaHTueKF4GDEusWtoGTFOSew4X
"""

!pip install psycopg2-binary

import psycopg2

dbname = 'yiwtoxhe'
user = 'yiwtoxhe'
password = 'N6v47hh8c62hrCx4IrfIPXUay3BMCGjn'  # Don't commit or share this for security purposes!
host = 'rajje.db.elephantsql.com'  # Port should be included or default

pg_conn = psycopg2.connect(dbname=dbname, user=user,
                           password=password, host=host)

pg_curs = pg_conn.cursor()

!wget https://github.com/LambdaSchool/DS-Unit-3-Sprint-2-SQL-and-Databases/blob/master/module1-introduction-to-sql/rpg_db.sqlite3?raw=true

!mv 'rpg_db.sqlite3?raw=true' rpg_db.sqlite3

!ls

# importing sqlite2
import sqlite3
sl_conn = sqlite3.connect('rpg_db.sqlite3')
sl_curs = sl_conn.cursor()

row_count = 'SELECT COUNT(*) FROM charactercreator_character'
sl_curs.execute(row_count).fetchall()

get_characters = 'SELECT * FROM charactercreator_character'
characters = sl_curs.execute(get_characters).fetchall()

characters[0:5]

create_character_table = '''
CREATE TABLE charactercreator_character (
  character_id SERIAL PRIMARY KEY,
  name VARCHAR(30),
  level INT,
  exp INT,
  hp INT,
  strength INT,
  intelligence INT,
  dexterity INT,
  wisdom INT
);
'''

pg_curs.execute(create_character_table)
pg_conn.commit()

show_tables = """
SELECT
  *
FROM
  pg_catalog.pg_tables
WHERE
  schemaname != 'pg_catalog'
AND schemaname != 'information_schema';
"""
pg_curs.execute(show_tables)
pg_curs.fetchall()

example_insert = """
INSERT INTO charactercreator_character
(name, level, exp, hp, strength, intelligence, dexterity, wisdom)
VALUES """ + str(characters[0][1:]) + ";"

print(example_insert)

for character in characters:
  insert_character = """
    INSERT INTO charactercreator_character
    (name, level, exp, hp, strength, intelligence, dexterity, wisdom)
    VALUES """ + str(character[1:]) + ";"
  pg_curs.execute(insert_character)

pg_curs.execute('SELECT * FROM charactercreator_character')
pg_curs.fetchall()

pg_conn.commit()

pg_curs.execute('SELECT * FROM charactercreator_character')
pg_characters = pg_curs.fetchall()

characters[0]

pg_characters[0]

for character, pg_character in zip(characters, pg_characters):
  assert character == pg_character

